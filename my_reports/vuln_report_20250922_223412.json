{
  "report_id": "vuln_report_20250922_223412",
  "timestamp": "2025-09-22T22:34:12.532488",
  "repository_info": {
    "url": "https://github.com/trottomv/python-insecure-app",
    "local_path": "./data/repositories/trottomv_python-insecure-app",
    "name": "trottomv_python-insecure-app",
    "size_mb": 0.11304187774658203,
    "python_files": [
      "./data/repositories/trottomv_python-insecure-app/app/config.py",
      "./data/repositories/trottomv_python-insecure-app/app/__init__.py",
      "./data/repositories/trottomv_python-insecure-app/app/main.py",
      "./data/repositories/trottomv_python-insecure-app/tests/__init__.py",
      "./data/repositories/trottomv_python-insecure-app/tests/test_main.py"
    ],
    "total_files": 25,
    "dependencies": [],
    "readme_content": "# Python insecure and vulnerable demo app\n\nThis project is a deliberately vulnerable **FastAPI** application created to demonstrate common web vulnerabilities and how to perform **remediation** to mitigate them. The goal is to provide a practical example of **Data-Driven Development**, where **security audits** and **assessments** guide the development process to improve application security.\n\n## Features\n\n- **FastAPI application** with endpoints vulnerable to common web attacks.\n- **Vulnerability analysis** using tools such as **pip-audit**, **Bandit**, **Trivy**, and other security tools.\n- Practical demonstration of vulnerabilities and their corresponding **remediation**.\n- Use of **shift-left** security practices, involving developers in security efforts from the early stages of development.\n\n## Demonstrated vulnerabilities\n\nThis application intentionally includes the following vulnerabilities:\n\n1. **Insecure dependencies**: Use of libraries with known vulnerabilities.\n2. **Hardcoded secrets**: Credentials and API keys hardcoded into the code.\n3. **Server-Side Template Injection (SSTI)**: Execution of malicious code via untrusted input in templates.\n\n## Project objectives\n\n1. **Demonstrate vulnerabilities**: Show how certain configurations or lack of validation can lead to real security risks.\n2. **Security audits**: Use static and dynamic analysis tools to detect and categorize vulnerabilities.\n3. **Remediation**: Show how to apply countermeasures to mitigate or eliminate vulnerabilities by following security best practices.\n4. **Data-Driven development**: Demonstrate how security audits can guide the development cycle, integrating fixes based on concrete data.\n5. **Shift-Left in security**: Integrate security in the early stages of the development and application lifecycle (DevSecOps).\n\n## Tools used\n\n- **FastAPI**: Framework used to build the web application.\n\n    https://fastapi.tiangolo.com/\n\n- **pip-audit**: Scans Python dependencies for known vulnerabilities.\n\n    https://pypi.org/project/pip-audit/\n\n- **Bandit**: Static code analysis for security vulnerabilities.\n\n    https://bandit.readthedocs.io/en/latest/\n\n- **Aqasec Trivy**: Scans for vulnerabilities in containers and dependencies.\n\n    https://aquasecurity.github.io/trivy\n\n- **Fuzzy Testing**: Fuzzy testing to uncover bugs and vulnerabilities.\n\n    https://schemathesis.readthedocs.io/\n\n- **OWASP Zap API Scan**: Testing tool for web vulnerabilities.\n\n    https://www.zaproxy.org/docs/docker/api-scan/\n\n- **Pre-commit**: Automates security checks before each commit.\n\n    https://pre-commit.com/\n\n## Requirements\n\n- **Python 3.9+**\n- **Astral uv**\n- **make**\n- **Docker**\n- **Docker Compose**\n\n## Installation\n\n1. Clone the repository:\n\n```shell\ngit clone https://github.com/trottomv/python-insecure-app\n```\n\n2. Copy the `.env_temp` file to `.env`\n\n```shell\ncp .env_temp .env\n```\n\nAnd update the necessary environment variables into `.env` file, such as:\n\n```shell\nSUPER_SECRET_NAME='John Ripper'\nSUPER_SECRET_TOKEN='5u93R53Cr3tT0k3n'\n```\n\n3. Create and activate a virtual environment:\n\n```shell\nmake venv\nsource .venv/bin/activate\n```\n\n4. Install the development dependencies:\n\n```shell\nmake install_dev\n```\n\n## Running the application in development mode\n\nTo run the FastAPI application locally:\n\n```shell\nmake rundev\n```\n\nThe app will be available at http://127.0.0.1:1337\n\n## Run with Docker Compose (optional)\n\nTo build and run the Docker image of the application:\n\n```shell\nmake build\n```\n\nSet the `APP_IMAGE` environment variable in the `.env` file:\n\n```shell\nAPP_IMAGE=python-insecure-app:latest\n```\n\nThen, run the application using Docker Compose:\n\n```shell\ndocker compose up\n```\n\n## Running Tests\n\n### Unit tests\n\n1. Quick tests with coverage report\n\n```shell\nmake quicktest\n```\n\n### Static security tests (SCA / SAST)\n\n1. Check dependencies and common security issue\n\n```shell\nmake audit\n```\n\nIn this step, `pip-audit` and `bandit` will scan the project for known vulnerabilities in your Python dependencies and perform static code analysis to detect potential security flaws in your code. pip-audit checks for outdated or vulnerable packages, while bandit analyzes the codebase for common security issues such as hardcoded secrets, improper exception handling, and unsafe configurations.\n\n### Fuzzy tests\n\n```shell\nmake rundev\nmake fuzzytest\n```\n\nIn this step, `schemathesis` will be used to perform fuzzy testing on your API endpoints. Schemathesis generates random, unexpected, and malformed inputs based on the OpenAPI specification of your application. This allows for the discovery of edge cases, bugs, and vulnerabilities that traditional unit tests might miss. By executing these tests, you can uncover issues such as improper input validation, crashes, or unhandled exceptions that could lead to security risks or degraded performance.\n\n### Vulnerability Assessment\n\nIn this step, a Docker image of the application will be built, and **Trivy** will perform a vulnerability",
    "license_info": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring t"
  },
  "executive_summary": {
    "repository_name": "trottomv_python-insecure-app",
    "repository_url": "https://github.com/trottomv/python-insecure-app",
    "total_vulnerabilities": 1,
    "severity_breakdown": {
      "critical": 0,
      "high": 0,
      "medium": 0,
      "low": 1
    },
    "vulnerability_types": {
      "suspicious_pattern": 1
    },
    "overall_risk": "Low",
    "files_analyzed": 1,
    "zero_day_potential": 0.0
  },
  "vulnerability_findings": [
    {
      "file_path": "./data/repositories/trottomv_python-insecure-app/app/main.py",
      "line_number": 38,
      "vulnerability_type": "suspicious_pattern",
      "severity": "low",
      "confidence": 0.6,
      "description": "Suspicious code pattern detected: f\"<h1>Hello, {name}!</h1><h2>Public IP: <code>{public_ip}</code></h2>\"",
      "detection_method": "pattern_matching",
      "source": "Python Analysis Agent"
    }
  ],
  "static_analysis_results": {
    "status": "success",
    "analyzed_files": 5,
    "analysis_results": [
      {
        "file_path": "./data/repositories/trottomv_python-insecure-app/app/config.py",
        "ast_analysis": {
          "imports": [
            "os",
            "dotenv.find_dotenv",
            "dotenv.load_dotenv"
          ],
          "functions": [],
          "classes": [],
          "dangerous_calls": [],
          "variables": [
            {
              "name": "DEBUG",
              "line": 9
            },
            {
              "name": "PUBLIC_IP_SERVICE_URL",
              "line": 11
            },
            {
              "name": "SUPER_SECRET_NAME",
              "line": 13
            },
            {
              "name": "SUPER_SECRET_TOKEN",
              "line": 15
            }
          ],
          "decorators": [],
          "ast_nodes": 53
        },
        "dangerous_calls": [],
        "suspicious_patterns": [],
        "imports": [
          "os",
          "dotenv.find_dotenv",
          "dotenv.load_dotenv"
        ],
        "functions": [],
        "classes": [],
        "complexity_score": 0.53,
        "security_score": 1
      },
      {
        "file_path": "./data/repositories/trottomv_python-insecure-app/app/__init__.py",
        "ast_analysis": {
          "imports": [],
          "functions": [],
          "classes": [],
          "dangerous_calls": [],
          "variables": [],
          "decorators": [],
          "ast_nodes": 1
        },
        "dangerous_calls": [],
        "suspicious_patterns": [],
        "imports": [],
        "functions": [],
        "classes": [],
        "complexity_score": 0.01,
        "security_score": 0
      },
      {
        "file_path": "./data/repositories/trottomv_python-insecure-app/app/main.py",
        "ast_analysis": {
          "imports": [
            "requests",
            "fastapi.FastAPI",
            "fastapi.responses.HTMLResponse",
            "jinja2.Template",
            "app.config"
          ],
          "functions": [],
          "classes": [],
          "dangerous_calls": [],
          "variables": [
            {
              "name": "app",
              "line": 10
            },
            {
              "name": "name",
              "line": 37
            },
            {
              "name": "content",
              "line": 38
            },
            {
              "name": "public_ip_response",
              "line": 31
            },
            {
              "name": "public_ip",
              "line": 36
            },
            {
              "name": "public_ip",
              "line": 34
            }
          ],
          "decorators": [],
          "ast_nodes": 126
        },
        "dangerous_calls": [],
        "suspicious_patterns": [
          {
            "pattern": "f['\\\"].*\\{.*\\}.*['\\\"]",
            "line": 38,
            "match": "f\"<h1>Hello, {name}!</h1><h2>Public IP: <code>{public_ip}</code></h2>\"",
            "start": 14,
            "end": 84
          }
        ],
        "imports": [
          "requests",
          "fastapi.FastAPI",
          "fastapi.responses.HTMLResponse",
          "jinja2.Template",
          "app.config"
        ],
        "functions": [],
        "classes": [],
        "complexity_score": 1.26,
        "security_score": 1
      },
      {
        "file_path": "./data/repositories/trottomv_python-insecure-app/tests/__init__.py",
        "ast_analysis": {
          "imports": [],
          "functions": [],
          "classes": [],
          "dangerous_calls": [],
          "variables": [],
          "decorators": [],
          "ast_nodes": 1
        },
        "dangerous_calls": [],
        "suspicious_patterns": [],
        "imports": [],
        "functions": [],
        "classes": [],
        "complexity_score": 0.01,
        "security_score": 0
      },
      {
        "file_path": "./data/repositories/trottomv_python-insecure-app/tests/test_main.py",
        "ast_analysis": {
          "imports": [
            "requests",
            "fastapi.testclient.TestClient",
            "app.config",
            "app.main.app"
          ],
          "functions": [
            {
              "name": "test_root",
              "line": 12,
              "args": 1,
              "decorators": []
            }
          ],
          "classes": [],
          "dangerous_calls": [],
          "variables": [
            {
              "name": "client",
              "line": 9
            },
            {
              "name": "response",
              "line": 16
            },
            {
              "name": "response",
              "line": 25
            },
            {
              "name": "response",
              "line": 32
            }
          ],
          "decorators": [],
          "ast_nodes": 133
        },
        "dangerous_calls": [],
        "suspicious_patterns": [],
        "imports": [
          "requests",
          "fastapi.testclient.TestClient",
          "app.config",
          "app.main.app"
        ],
        "functions": [
          {
            "name": "test_root",
            "line": 12,
            "args": 1,
            "decorators": []
          }
        ],
        "classes": [],
        "complexity_score": 1.83,
        "security_score": 0
      }
    ],
    "summary": {
      "total_files": 5,
      "total_dangerous_calls": 0,
      "total_suspicious_patterns": 1,
      "average_complexity_score": 0.73,
      "average_security_score": 0.4,
      "unique_imports": 10,
      "total_functions": 1,
      "risk_level": "low"
    }
  },
  "risk_assessment": {
    "overall_risk": "Low",
    "risk_score": 6.0,
    "total_findings": 1,
    "high_confidence_findings": 0,
    "zero_day_indicators": 0
  },
  "recommendations": [
    "📚 Conduct regular security code reviews",
    "🔄 Keep dependencies updated to latest secure versions",
    "🧪 Implement automated security testing in CI/CD pipeline",
    "📊 Monitor application for suspicious activities",
    "🎓 Provide security training for development team"
  ],
  "metadata": {
    "generator": "ZeroDay Pipeline",
    "version": "0.1.0",
    "analysis_agents": [
      "DeepHat Security Agent",
      "Python Analysis Agent"
    ]
  }
}